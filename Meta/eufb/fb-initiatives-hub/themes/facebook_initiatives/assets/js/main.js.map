{"version":3,"sources":["src/scripts/index.js","scripts/polyfills.js","scripts/components/tracking.js","scripts/components/header.js","scripts/components/programs.js","scripts/components/footer.js","scripts/app.js","scripts/index.js"],"names":["window","NodeList","prototype","forEach","callback","thisArg","i","length","call","Tracking","initLinkTracking","links","document","querySelectorAll","link","addEventListener","onLinkClicked","bind","event","trackEvent","currentTarget","href","category","action","label","console","log","dataLayer","warn","push","eventAction","eventLabel","SHOW_MENU_CLASSNAME","Header","initBurgerButton","initSmoothScroll","passiveScrollHandler","onPassiveScroll","onScroll","onMouseWheel","onTouchStart","button","querySelector","onclick","body","classList","toggle","smoothScrollLinkClickedHandler","onSmoothScrollLinkClicked","anchors","scrollTop","scrollY","pageYOffset","scrollBottom","innerHeight","scrollHeight","anchor","getBoundingClientRect","top","currentSection","remove","anchorClass","add","history","replaceState","element","duration","time","startTime","performance","now","startPosition","pageBottomDelta","bottom","deltaPosition","Math","min","ease","t","b","c","d","scrollAnimation","position","scroll","isSmoothScrolling","requestAnimationFrame","cancelAnimationFrame","debounce","setTimeout","getCurrentSection","oldSection","updateURL","updateAnchorClass","preventDefault","name","split","smoothScroll","Programs","filters","initFilters","programs","initPrograms","heroes","grid","onResize","updateFilter","program","onProgramClicked","filter","onFilterClicked","attributes","value","gridRect","programRect","right","left","height","filterElement","tags","programElement","indexOf","heroElement","clickedProgram","contains","headingText","textContent","clearTimeout","resizeTimeout","onPassiveResize","updatePrograms","Footer","initCountrySelector","countrySelector","onCountrySelectorChanged","location","target","App"],"mappings":"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","file":"main.js","sourcesContent":["(function () {\n'use strict';\n\nif (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n\nclass Tracking {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initLinkTracking();\n    }\n\n    initLinkTracking() {\n        let links = document.querySelectorAll('a[href]');\n        links.forEach((link) => link.addEventListener('click', this.onLinkClicked.bind(this)));\n    }\n\n\n    //////////////////////////////////////////\n    //                  API                 //\n    //////////////////////////////////////////\n\n    static trackEvent(category, action, label) {\n        console.log('Track event:', category, action, label);\n\n        if(!window.dataLayer) {\n            console.warn('Google Tag Manager data layer not found. Tracking may not be operational.');\n            window.dataLayer = [];\n            return;\n        }\n\n        window.dataLayer.push({\n            event: category,\n            eventAction: action,\n            eventLabel: label\n        });\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onLinkClicked(event) {\n        Tracking.trackEvent('Link', 'click', event.currentTarget.href);\n    }\n}\n\nconst SHOW_MENU_CLASSNAME = 'menu--show';\n\nclass Header {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initBurgerButton();\n        this.initSmoothScroll();\n\n        this.passiveScrollHandler = this.onPassiveScroll.bind(this);\n        window.addEventListener('scroll', this.onScroll.bind(this));\n        window.addEventListener('mousewheel', this.onMouseWheel.bind(this));\n        window.addEventListener('touchstart', this.onTouchStart.bind(this));\n\n        this.onScroll();\n    }\n\n    initBurgerButton() {\n        let button = document.querySelector('[data-menu-button]');\n        button.onclick = () => document.body.classList.toggle(SHOW_MENU_CLASSNAME);\n    }\n\n    initSmoothScroll() {\n        let links = document.querySelectorAll('[data-smooth-scroll]');\n        this.smoothScrollLinkClickedHandler = this.onSmoothScrollLinkClicked.bind(this);\n\n        links.forEach((link) => {\n            link.addEventListener('click', this.smoothScrollLinkClickedHandler);\n        });\n    }\n\n\n    //////////////////////////////////////////\n    //                METHODS               //\n    //////////////////////////////////////////\n\n    getCurrentSection() {\n        let anchors = document.querySelectorAll('[data-scroll-anchor]');\n\n        let scrollTop = window.scrollY || window.pageYOffset;\n        let scrollBottom = scrollTop + window.innerHeight;\n\n        if (document.body.scrollHeight - scrollBottom < 10) {\n            return anchors[anchors.length - 1]['name'];\n        } else {\n            for (let i = anchors.length - 1; i >= 0; i--) {\n                let anchor = anchors[i];\n\n                if (anchor.getBoundingClientRect().top <= 0) {\n                    return anchor['name'];\n                }\n            }\n        }\n    }\n\n    updateAnchorClass(currentSection) {\n        let classList = document.body.classList;\n\n        classList.remove(this.anchorClass);\n\n        this.anchorClass = 'section--' + currentSection;\n\n        classList.add(this.anchorClass);\n    }\n\n    updateURL(currentSection) {\n        history.replaceState('', '', '#' + currentSection);\n    }\n\n    smoothScroll(element, duration = 1000) {\n        let time;\n        let startTime = performance.now();\n        let startPosition = window.pageYOffset;\n\n        let pageBottomDelta = document.body.getBoundingClientRect().bottom - window.innerHeight;\n        let deltaPosition = Math.min(element.getBoundingClientRect().top, pageBottomDelta);\n\n        let ease = function (t, b, c, d) {\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        };\n\n        this.scrollAnimation = function () {\n            time = Math.min(performance.now() - startTime, duration);\n            let position = ease(time, startPosition, deltaPosition, duration);\n            window.scroll(0, position);\n\n            if (time >= duration) {\n                this.isSmoothScrolling = false;\n                this.onScroll();\n            } else if (this.isSmoothScrolling) {\n                requestAnimationFrame(this.scrollAnimation);\n            }\n        }.bind(this);\n\n        // Cancel previous animation...\n        this.isSmoothScrolling = false;\n        cancelAnimationFrame(this.scrollAnimation);\n\n        // Start the new one...\n        this.isSmoothScrolling = true;\n        requestAnimationFrame(this.scrollAnimation);\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onScroll() {\n        if (this.isSmoothScrolling) return;\n        if (!this.debounce) setTimeout(this.passiveScrollHandler, 100);\n    }\n\n    onPassiveScroll() {\n        let currentSection = this.getCurrentSection();\n\n        if(currentSection !== this.oldSection) {\n            this.updateURL(currentSection);\n            this.updateAnchorClass(currentSection);\n            Tracking.trackEvent('Section', 'scroll', currentSection);\n        }\n\n        this.oldSection = currentSection;\n        this.debounce = null;\n    }\n\n    onSmoothScrollLinkClicked(event) {\n        event.preventDefault();\n\n        document.body.classList.remove(SHOW_MENU_CLASSNAME);\n\n        let name = event.currentTarget['href'].split('#')[1];\n        let anchor = document.querySelectorAll(`a[name=${name}]`)[0];\n\n        this.updateURL(name);\n        this.updateAnchorClass(name);\n        this.smoothScroll(anchor);\n    }\n\n    onMouseWheel() {\n        this.isSmoothScrolling = false;\n    }\n\n    onTouchStart() {\n        this.isSmoothScrolling = false;\n    }\n}\n\nclass Programs {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.filters = this.initFilters();\n        this.programs = this.initPrograms();\n        this.heroes = document.querySelectorAll('[data-programs-hero]');\n        this.grid = document.querySelector('[data-programs-grid]');\n\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.onResize();\n\n        this.updateFilter('');\n    }\n\n    initPrograms() {\n        let programs = document.querySelectorAll('[data-program]');\n\n        programs.forEach(program => {\n            program.addEventListener('click', this.onProgramClicked.bind(this, program));\n        });\n\n        return programs;\n    }\n\n    initFilters() {\n        let filters = document.querySelectorAll('[data-filter]');\n\n        filters.forEach(filter => {\n            filter.addEventListener('click', this.onFilterClicked.bind(this, filter.attributes['data-filter'].value));\n        });\n\n        return filters;\n    }\n\n    //////////////////////////////////////////\n    //                METHODS               //\n    //////////////////////////////////////////\n\n    updatePrograms() {\n        const gridRect = this.grid.getBoundingClientRect();\n\n        this.programs.forEach(program => {\n            const programRect = program.getBoundingClientRect();\n\n            if (programRect.right === gridRect.right && programRect.left !== gridRect.left) {\n                program.classList.add('program--right');\n            } else {\n                program.classList.remove('program--right');\n            }\n\n            if (programRect.bottom === gridRect.bottom && gridRect.height > programRect.height * 2) {\n                program.classList.add('program--bottom');\n            } else {\n                program.classList.remove('program--bottom');\n            }\n        });\n    }\n\n    updateFilter(filter) {\n        this.filters.forEach(filterElement => {\n            if (filterElement.attributes['data-filter'].value === filter) {\n                filterElement.classList.add('selected');\n            } else {\n                filterElement.classList.remove('selected');\n            }\n        });\n\n        this.programs.forEach(programElement => {\n            let tags = programElement.attributes['data-tags'].value.split(' ');\n\n            if (!filter || tags.indexOf(filter) >= 0) {\n                programElement.classList.remove('program--hidden');\n            } else {\n                programElement.classList.add('program--hidden');\n            }\n        });\n\n        this.heroes.forEach(heroElement => {\n            let tags = heroElement.attributes['data-tags'].value.split(' ');\n\n            if (filter) {\n                if (tags.indexOf(filter) >= 0) {\n                    heroElement.classList.remove('programs__hero--hidden');\n                } else {\n                    heroElement.classList.add('programs__hero--hidden');\n                }\n            } else {\n                if (tags.length === 1 && !tags[0]) {\n                    heroElement.classList.remove('programs__hero--hidden');\n                } else {\n                    heroElement.classList.add('programs__hero--hidden');\n                }\n            }\n        });\n\n        this.onResize();\n    }\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onProgramClicked(clickedProgram) {\n        this.programs.forEach(program => {\n            if (program === clickedProgram) {\n                if (!program.classList.contains('program--expanded')) {\n                    let headingText = program.querySelector('.program__heading').textContent;\n                    Tracking.trackEvent('Program', 'open', headingText);\n                }\n\n                program.classList.toggle('program--expanded');\n            } else {\n                program.classList.remove('program--expanded');\n            }\n        });\n\n    }\n\n    onFilterClicked(filter) {\n        this.updateFilter(filter);\n    }\n\n    onResize() {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(this.onPassiveResize.bind(this), 100);\n    }\n\n    onPassiveResize() {\n        this.updatePrograms();\n    }\n}\n\nclass Footer {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initCountrySelector();\n    }\n\n    initCountrySelector() {\n        const countrySelector = document.querySelector('[data-country-selector]');\n        if(!countrySelector) return;\n\n        countrySelector.addEventListener('change', this.onCountrySelectorChanged.bind(this));\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onCountrySelectorChanged(event) {\n        window.location = event.target.value;\n    }\n}\n\n/**\n * App - Main application\n */\nclass App {\n\n    /**\n     * constructor - Create instance of Application\n     */\n    constructor() {\n        new Header();\n        new Tracking();\n        new Programs();\n        new Footer();\n    }\n}\n\nnew App();\n\n}());\n","if (window.NodeList && !NodeList.prototype.forEach) {\n    NodeList.prototype.forEach = function (callback, thisArg) {\n        thisArg = thisArg || window;\n        for (var i = 0; i < this.length; i++) {\n            callback.call(thisArg, this[i], i, this);\n        }\n    };\n}\n","export default class Tracking {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initLinkTracking();\n    }\n\n    initLinkTracking() {\n        let links = document.querySelectorAll('a[href]');\n        links.forEach((link) => link.addEventListener('click', this.onLinkClicked.bind(this)));\n    }\n\n\n    //////////////////////////////////////////\n    //                  API                 //\n    //////////////////////////////////////////\n\n    static trackEvent(category, action, label) {\n        console.log('Track event:', category, action, label);\n\n        if(!window.dataLayer) {\n            console.warn('Google Tag Manager data layer not found. Tracking may not be operational.');\n            window.dataLayer = [];\n            return;\n        }\n\n        window.dataLayer.push({\n            event: category,\n            eventAction: action,\n            eventLabel: label\n        });\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onLinkClicked(event) {\n        Tracking.trackEvent('Link', 'click', event.currentTarget.href);\n    }\n}\n","import Tracking from './tracking';\n\nexport const SHOW_MENU_CLASSNAME = 'menu--show';\n\nexport default class Header {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initBurgerButton();\n        this.initSmoothScroll();\n\n        this.passiveScrollHandler = this.onPassiveScroll.bind(this);\n        window.addEventListener('scroll', this.onScroll.bind(this));\n        window.addEventListener('mousewheel', this.onMouseWheel.bind(this));\n        window.addEventListener('touchstart', this.onTouchStart.bind(this));\n\n        this.onScroll();\n    }\n\n    initBurgerButton() {\n        let button = document.querySelector('[data-menu-button]');\n        button.onclick = () => document.body.classList.toggle(SHOW_MENU_CLASSNAME);\n    }\n\n    initSmoothScroll() {\n        let links = document.querySelectorAll('[data-smooth-scroll]');\n        this.smoothScrollLinkClickedHandler = this.onSmoothScrollLinkClicked.bind(this);\n\n        links.forEach((link) => {\n            link.addEventListener('click', this.smoothScrollLinkClickedHandler);\n        })\n    }\n\n\n    //////////////////////////////////////////\n    //                METHODS               //\n    //////////////////////////////////////////\n\n    getCurrentSection() {\n        let anchors = document.querySelectorAll('[data-scroll-anchor]');\n\n        let scrollTop = window.scrollY || window.pageYOffset;\n        let scrollBottom = scrollTop + window.innerHeight;\n\n        if (document.body.scrollHeight - scrollBottom < 10) {\n            return anchors[anchors.length - 1]['name'];\n        } else {\n            for (let i = anchors.length - 1; i >= 0; i--) {\n                let anchor = anchors[i];\n\n                if (anchor.getBoundingClientRect().top <= 0) {\n                    return anchor['name'];\n                }\n            }\n        }\n    }\n\n    updateAnchorClass(currentSection) {\n        let classList = document.body.classList;\n\n        classList.remove(this.anchorClass);\n\n        this.anchorClass = 'section--' + currentSection;\n\n        classList.add(this.anchorClass);\n    }\n\n    updateURL(currentSection) {\n        history.replaceState('', '', '#' + currentSection);\n    }\n\n    smoothScroll(element, duration = 1000) {\n        let time;\n        let startTime = performance.now();\n        let startPosition = window.pageYOffset;\n\n        let pageBottomDelta = document.body.getBoundingClientRect().bottom - window.innerHeight;\n        let deltaPosition = Math.min(element.getBoundingClientRect().top, pageBottomDelta);\n\n        let ease = function (t, b, c, d) {\n            if ((t /= d / 2) < 1) return c / 2 * t * t + b;\n            return -c / 2 * ((--t) * (t - 2) - 1) + b;\n        };\n\n        this.scrollAnimation = function () {\n            time = Math.min(performance.now() - startTime, duration);\n            let position = ease(time, startPosition, deltaPosition, duration);\n            window.scroll(0, position);\n\n            if (time >= duration) {\n                this.isSmoothScrolling = false;\n                this.onScroll();\n            } else if (this.isSmoothScrolling) {\n                requestAnimationFrame(this.scrollAnimation);\n            }\n        }.bind(this);\n\n        // Cancel previous animation...\n        this.isSmoothScrolling = false;\n        cancelAnimationFrame(this.scrollAnimation);\n\n        // Start the new one...\n        this.isSmoothScrolling = true;\n        requestAnimationFrame(this.scrollAnimation);\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onScroll() {\n        if (this.isSmoothScrolling) return;\n        if (!this.debounce) setTimeout(this.passiveScrollHandler, 100);\n    }\n\n    onPassiveScroll() {\n        let currentSection = this.getCurrentSection();\n\n        if(currentSection !== this.oldSection) {\n            this.updateURL(currentSection);\n            this.updateAnchorClass(currentSection);\n            Tracking.trackEvent('Section', 'scroll', currentSection);\n        }\n\n        this.oldSection = currentSection;\n        this.debounce = null;\n    }\n\n    onSmoothScrollLinkClicked(event) {\n        event.preventDefault();\n\n        document.body.classList.remove(SHOW_MENU_CLASSNAME);\n\n        let name = event.currentTarget['href'].split('#')[1];\n        let anchor = document.querySelectorAll(`a[name=${name}]`)[0];\n\n        this.updateURL(name);\n        this.updateAnchorClass(name);\n        this.smoothScroll(anchor);\n    }\n\n    onMouseWheel() {\n        this.isSmoothScrolling = false;\n    }\n\n    onTouchStart() {\n        this.isSmoothScrolling = false\n    }\n}\n","import Tracking from \"./tracking\";\n\nexport default class Programs {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.filters = this.initFilters();\n        this.programs = this.initPrograms();\n        this.heroes = document.querySelectorAll('[data-programs-hero]');\n        this.grid = document.querySelector('[data-programs-grid]');\n\n        window.addEventListener('resize', this.onResize.bind(this));\n        this.onResize();\n\n        this.updateFilter('');\n    }\n\n    initPrograms() {\n        let programs = document.querySelectorAll('[data-program]');\n\n        programs.forEach(program => {\n            program.addEventListener('click', this.onProgramClicked.bind(this, program));\n        });\n\n        return programs;\n    }\n\n    initFilters() {\n        let filters = document.querySelectorAll('[data-filter]');\n\n        filters.forEach(filter => {\n            filter.addEventListener('click', this.onFilterClicked.bind(this, filter.attributes['data-filter'].value));\n        });\n\n        return filters;\n    }\n\n    //////////////////////////////////////////\n    //                METHODS               //\n    //////////////////////////////////////////\n\n    updatePrograms() {\n        const gridRect = this.grid.getBoundingClientRect();\n\n        this.programs.forEach(program => {\n            const programRect = program.getBoundingClientRect();\n\n            if (programRect.right === gridRect.right && programRect.left !== gridRect.left) {\n                program.classList.add('program--right');\n            } else {\n                program.classList.remove('program--right');\n            }\n\n            if (programRect.bottom === gridRect.bottom && gridRect.height > programRect.height * 2) {\n                program.classList.add('program--bottom');\n            } else {\n                program.classList.remove('program--bottom');\n            }\n        });\n    }\n\n    updateFilter(filter) {\n        this.filters.forEach(filterElement => {\n            if (filterElement.attributes['data-filter'].value === filter) {\n                filterElement.classList.add('selected');\n            } else {\n                filterElement.classList.remove('selected');\n            }\n        });\n\n        this.programs.forEach(programElement => {\n            let tags = programElement.attributes['data-tags'].value.split(' ');\n\n            if (!filter || tags.indexOf(filter) >= 0) {\n                programElement.classList.remove('program--hidden');\n            } else {\n                programElement.classList.add('program--hidden');\n            }\n        });\n\n        this.heroes.forEach(heroElement => {\n            let tags = heroElement.attributes['data-tags'].value.split(' ');\n\n            if (filter) {\n                if (tags.indexOf(filter) >= 0) {\n                    heroElement.classList.remove('programs__hero--hidden');\n                } else {\n                    heroElement.classList.add('programs__hero--hidden');\n                }\n            } else {\n                if (tags.length === 1 && !tags[0]) {\n                    heroElement.classList.remove('programs__hero--hidden');\n                } else {\n                    heroElement.classList.add('programs__hero--hidden');\n                }\n            }\n        });\n\n        this.onResize();\n    }\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onProgramClicked(clickedProgram) {\n        this.programs.forEach(program => {\n            if (program === clickedProgram) {\n                if (!program.classList.contains('program--expanded')) {\n                    let headingText = program.querySelector('.program__heading').textContent;\n                    Tracking.trackEvent('Program', 'open', headingText);\n                }\n\n                program.classList.toggle('program--expanded');\n            } else {\n                program.classList.remove('program--expanded');\n            }\n        });\n\n    }\n\n    onFilterClicked(filter) {\n        this.updateFilter(filter);\n    }\n\n    onResize() {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(this.onPassiveResize.bind(this), 100);\n    }\n\n    onPassiveResize() {\n        this.updatePrograms();\n    }\n}\n","export default class Footer {\n\n    //////////////////////////////////////////\n    //            INITIALISATION            //\n    //////////////////////////////////////////\n\n    constructor() {\n        this.initCountrySelector();\n    }\n\n    initCountrySelector() {\n        const countrySelector = document.querySelector('[data-country-selector]');\n        if(!countrySelector) return;\n\n        countrySelector.addEventListener('change', this.onCountrySelectorChanged.bind(this));\n    }\n\n\n    //////////////////////////////////////////\n    //                EVENTS                //\n    //////////////////////////////////////////\n\n    onCountrySelectorChanged(event) {\n        window.location = event.target.value;\n    }\n}\n","import Header from './components/header';\nimport Programs from './components/programs';\nimport Tracking from './components/tracking';\nimport Footer from './components/footer';\n\n/**\n * App - Main application\n */\nclass App {\n\n    /**\n     * constructor - Create instance of Application\n     */\n    constructor() {\n        new Header();\n        new Tracking();\n        new Programs();\n        new Footer();\n    }\n}\n\nexport default App;\n","import './polyfills';\nimport App from './app';\n\nnew App();\n"]}